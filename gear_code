%%% Gear Design Project Code
% MEE Gearbox Preliminary Report
% gear_code_2.0
% Andre Ellini, Marisa Mannon, Hardy Duong


%% Notes: 
  % This is a MATLAB code file.
  % Code was generated in English units (in, lbf, etc.)
  % Code is to be used for design of a spur gear with the given parameters.

  % Input all values denoted with a "p" with PINION Values
  % all imputs that do not specify _p, treat as values for larger gear.


%% Definition and Variables
% Diametral Pitch and Face Width
  % face width must be between 3pi/Pd and 5pi/Pd
  % recommended F of 4pi/Pd used below.
  Pd = ;              % diametral pitch
  F = 4*pi/Pd;        % net face width (narrowest member)

% Gear Material
  % this is to be predetermined; any edits to material require code to be changed.
  nu = ;        % poisson's ratio
  E = ;         % elastic modulus (ksi)
  density = ;   % density (lb/ft^3)
  mat = ;       % set this to either 1 or 2.
    % 1 = grade 1 through-hardened steel, 2 = grade 2 hardened steel
    % if a different material is chosen, must change Brinell Hardness eqn and Strength eqns
% Loads and Forces
  rpm = ;       % revolutions per minute
  H = ;         % power (hp)
  R = 0.9;      % reliability factor (est 0.9)
  Ko = ;        % overload factor, obtain from Shigley Tables

% Quality
  qual = ;      % quality number (1-6, with 6 being the highest)
  nd = ;        % design factor
  
% Teeth Systems
  phi = ;       % pressure angle, see shigley for derivation
  N = ;         % Number of teeth on gear
  N_p = ;       % Number of teeth on pinion
  rf = ;        % fillet radius (inches)
  
  mg = N/N_p; % speed ratio

% Pinion Geometry
  s1 = ;        % distance between midway and gear
  s2 = ;        % total distance between centerline of bearing (See Shigley for figure)

% Geometry Factors
  J = ;          % see Shigley table 14-6
  J_p = ;        % see Shigley table 14-6
  I = ((cosd(phi)*sind(phi))/(2))*(mg/(mg+1)); % Geometry Factor
 
% Brinell Hardness
  % please view section in Shigley; figure 14.12
  % for a summary, Ch = 1 for pinion ALWAYS.  
    % first find Hb (gear) and Hb_p (pinion), next refer to ratio on table or eqn on previous page.
    % Ratio Hbp/Hbg = Ch. Please ensure pinion is harder than
  Hb_p ;          % enter pinion hardness
  Hb_g ;          % enter gear hardness
  Ch = Hb_p/Hb_g;
    if Ch < 1
      error('invalid brinell hardness')
    ifelse Ch > 1.7
      error('invalid brinell hardness')
    end
  Ch = 1;         % delete this line if gears are different materials
  

%% Preliminary Calculations and Equations

  % pinion dimensions
  dp = N_p/Pd;        % inches
  d_ref_p = Pd*N_p/12;  % reference circle diameter in feet
  vol_p = (d_ref_p^2)*(pi/4)*(F/12);    % used for weight/cost calculation
  
  % gear dimensions
  dg = N/Pd;          % inches
  d_ref = Pd*N_p/12;  % reference circle diameter in feet
  vol_g = (d_ref^2)*(pi/4)*(F/12);      % used for weight/cost calculation

% Factors and Such
  
  % Dynamic Factor Pinion
  V = pi*d_p*N_p/12;  % pitch line velocity
  B = 0.25*(12-qual)^(2/3);
  A = 50+56*(1-B);
  Kv = ((A+(V_t)^(1/2))/A)^(B);  % dynamic factor
  
  % Size Factor
  ade = 1/P_d;        % addendum
  ded = 1.25/P_d;    % dedendum 
  t = 1.2*(ade+ded); % assuming m_b to be 1.2
  l = (ade + ded); % height of tooth  
  
  % Transmitted Load
  Wt = 33000*H/V;         % transmitted load (lbf)
  
%%% Lewis Form Factor
    % credit to morlando12 for the idea of importing this table into MATLAB and for the next 100 lines of code.
    N_g = N;
  LewisFormFactorMatrix = [12 0.245;13 0.261;14 0.277;15 0.29;16 0.296;17 0.303;18 0.309;19 0.314;20 0.322;21 0.328;22 0.331;24 0.337;26 0.346;28 0.353;30 0.359;34 0.371;38 0.384;43 0.397;50 0.409;60 0.422;75 0.435;100 0.447;150 0.46;300 0.472;400 0.480]; % Table of lewis form factors. Table 14-2 from book

% Statements for Pinion Lewis Form Factor:
if N_p == 12
    Y_p = LewisFormFactorMatrix(1,2);
elseif N_p == 13
    Y_p = LewisFormFactorMatrix(2,2);
elseif N_p == 14
    Y_p = LewisFormFactorMatrix(3,2);
elseif N_p == 15
    Y_p = LewisFormFactorMatrix(4,2);
elseif N_p == 16
    Y_p = LewisFormFactorMatrix(5,2);
elseif N_p == 17
    Y_p = LewisFormFactorMatrix(6,2);
elseif N_p == 18
    Y_p = LewisFormFactorMatrix(7,2);
elseif N_p == 19
    Y_p = LewisFormFactorMatrix(8,2);
elseif N_p == 20
    Y_p = LewisFormFactorMatrix(9,2);
elseif N_p == 21
    Y_p = LewisFormFactorMatrix(10,2);
elseif N_p == 22
    Y_p = LewisFormFactorMatrix(11,2);
elseif N_p == 24
    Y_p = LewisFormFactorMatrix(12,2);
elseif N_p == 26
    Y_p = LewisFormFactorMatrix(13,2);
elseif N_p == 28
    Y_p = LewisFormFactorMatrix(14,2);
elseif N_p == 30
    Y_p = LewisFormFactorMatrix(15,2);
elseif N_p == 34
    Y_p = LewisFormFactorMatrix(16,2);
elseif N_p == 38
    Y_p = LewisFormFactorMatrix(17,2);
elseif N_p == 43
    Y_p = LewisFormFactorMatrix(18,2);
elseif N_p == 50
    Y_p = LewisFormFactorMatrix(19,2);
elseif N_p == 60
    Y_p = LewisFormFactorMatrix(20,2);
elseif N_p == 75
    Y_p = LewisFormFactorMatrix(21,2);
elseif N_p == 100
    Y_p = LewisFormFactorMatrix(22,2);
elseif N_p == 150
    Y_p = LewisFormFactorMatrix(23,2);
elseif N_p == 300
    Y_p = LewisFormFactorMatrix(24,2);
elseif N_p == 400
    Y_p = LewisFormFactorMatrix(25,2);
else
    error('invalid Lewis Form Factor selection')
end

% Statements for Gear Lewis Form Factor:

if N_g == 12
    Y_g = LewisFormFactorMatrix(1,2);
elseif N_g == 13
    Y_g = LewisFormFactorMatrix(2,2);
elseif N_g == 14
    Y_g = LewisFormFactorMatrix(3,2);
elseif N_g == 15
    Y_g = LewisFormFactorMatrix(4,2);
elseif N_g == 16
    Y_g = LewisFormFactorMatrix(5,2);
elseif N_g == 17
    Y_g = LewisFormFactorMatrix(6,2);
elseif N_g == 18
    Y_g = LewisFormFactorMatrix(7,2);
elseif N_g == 19
    Y_g = LewisFormFactorMatrix(8,2);
elseif N_g == 20
    Y_g = LewisFormFactorMatrix(9,2);
elseif N_g == 21
    Y_g = LewisFormFactorMatrix(10,2);
elseif N_g == 22
    Y_g = LewisFormFactorMatrix(11,2);
elseif N_g == 24
    Y_g = LewisFormFactorMatrix(12,2);
elseif N_g == 26
    Y_g = LewisFormFactorMatrix(13,2);
elseif N_g == 28
    Y_g = LewisFormFactorMatrix(14,2);
elseif N_g == 30
    Y_g = LewisFormFactorMatrix(15,2);
elseif N_g == 34
    Y_g = LewisFormFactorMatrix(16,2);
elseif N_g == 38
    Y_g = LewisFormFactorMatrix(17,2);
elseif N_g == 43
    Y_g = LewisFormFactorMatrix(18,2);
elseif N_g == 50
    Y_g = LewisFormFactorMatrix(19,2);
elseif N_g == 60
    Y_g = LewisFormFactorMatrix(20,2);
elseif N_g == 75
    Y_g = LewisFormFactorMatrix(21,2);
elseif N_g == 100
    Y_g = LewisFormFactorMatrix(22,2);
elseif N_g == 150
    Y_g = LewisFormFactorMatrix(23,2);
elseif N_g == 300
    Y_g = LewisFormFactorMatrix(24,2);
elseif N_g == 400
    Y_g = LewisFormFactorMatrix(25,2);
else
    error('invalid Lewis Form Factor selection')
end

%%% More Factors, Constants, and Variables

  % Size Factor
  Ks_p = 1.192*((F/Pd)*(Y_p)^(1/2))^(0.0535);  % Size factor for pinion
  Ks = 1.192*((F/Pd)*(Y_g)^(1/2))^(0.0535);  % Size factor for gear
  
  % Load Distribution Factors
  
  Cc = ;    % load correction factor--- uncrowned = 1, crowned = 0.8
  
  % Proportion Factor and Modifier
    Cf = 1;         % assumed Surface Condition Factor of gear
    
  if F <= 1
    Cf_p = ((F/(10*d_p))-0.025);
  elseif (1<F)&&(F<=17)
    Cf_p = ((F/(10*d_p))-0.0375+0.0125*F);
  elseif (17<F)&&(F<=40)
    Kf_p = ((F/(10*d_p))-0.1109+0.0207*F-0.000228*(F)^(2));
  end
  
  s_ratio = s1/s2;
  if (s_ratio) < 0.175
    Cm_p = 1;
  else
    Cm_p = 1.1;
  end
  
  % Mesh Alignment Factor and Correction Factor
  Ce = ; % 0.8 if gear is adjusted, 1 for all other conditions
  Cma = 0.127 + 0.0158*F - (0.93*(10)^(-4))*F^(2); % Equation for commercial application
    % please change numbers above if you intend to use more precise gearing
  
  % Load Distribution Km
  Km = 1 + (Cc*((Cf_p*Cm_p)+(Cma*Ce)));
  
  % Rim Thickness factor 
  
  mb = t/(ade+ded);
  
  if mb < 1.2
    Kb = 1.6*(log(2.242/m_b));
  else
    Kb = 1
  end

  % Elastic Coefficient
  Cp = (1/((pi*(((1-nu_p^2)/E_p) + ((1-nu^2)/E)))))^(1/2);
      
  % Reliability Factor
  if (R>0.5)&&(R<0.99)
    Kr = 0.658 - 0.0759*log(1-R);
  else
    Kr = 0.50 - 0.109*log(1-R);
  end
  
  % Bending Strength
  % Please note this is dependent on Brinell Hardness Criteria
    if mat = 1
      St = (77.3*Hb)+(12800);
    elseif mat = 2
      St = (102*Hb)+(16400);
    else
      error('invalid material selection')
    end
    
  % Contact Strength
  % Please note this is dependent on Brinell Hardness Criteria
    if mat = 1
      Sc = (322*H_b)+(29100);    
    elseif mat = 2
      Sc = (349*H_b)+(34300);
    else
      error('invalid material selection')
    end
   
  % Cycle Factors
  Ncycles = H*(60)*(24)*(365)*(10);
  
    % Stress Factor (bending)
  Yn = 1.3558*Num_Cycles^(-0.0178);
  
    % Stress Factor (pitting)
  Zn = 1.4488*Num_Cycles^(-0.0178);
  
%% Governing Equations

% Gear (Larger)

bendStressG = Wt*Ko*Kv*Ks*(Pd/F)*(Km*Kb/J)   % bending stress
contStressG = (Cp)*((Wt)*(Ko)*(Kv)*(Ks)*((Km)*(Cf))/((dp)*(F)*(I))); % contact stress

bendFS = ((St*Yn)/(Kt*Kr))/bendStressG       % bending factor of safety
contFS = (Sc*Zn*Ch)/(Kt*Kr*contStressG);     % contact factor of safety (wear)

bendFatigue = (St*Yn)/(bendFS*Kt*Kr)             % bending fatigue/endurance strength
contFatigue = (Sc*Zn*Ch)/(Sh*Kt*Kr)              % contact fatigue/endurance strength (wear)

weightG = density*Vol_g;

% Pinion (Smaller)

bendStressP = Wt*Ko*Kv*Ks*(Pd/F)*(Km*Kb/J_p)  % bending stress
contStressP = (Cp)*((Wt)*(Ko)*(Kv)*(Ks_p)*((Km)*(Cf_p))/((dp)*(F)*(I)));   % contact stress

bendFS_p = ((St*Yn)/(Kt*Kr))/bendStressG             % bending factor of safety
contFS_p = ((Sc)*(Zn)*(Ch))/((Kt)*(Kr)*contStressP); % contact factor of safety (wear)

bendFatigue = (St*Yn)/(Sf*Kt*Kr)                % bending fatigue/endurance strength
contFatigue = (Sc*Zn*Ch)/(Sh*Kt*Kr)             % contact fatigue/endurance strength (wear)

weightP = density*Vol_p;

% Print Results
    disp('Gear Bending FS:', bendFS)
    disp('Gear Contact FS:', contFS)
    disp('Pinion Bending FS:', bendFS_p)
    disp('Pinion Cont FS:', contFS_p)
   
